// 性质：
// 1、节点是红色或黑色
// 2、根节点是黑色
// 3、每个叶子节点都是黑色的空节点(NIL节点)
// 4、每个红色节点的两个子节点都是黑色(从每个叶子到根的所有路径上不能有两个连续的红色节点)
// 5、从任一节点到其每个叶子节点的所有路径都包含相同数目的黑色节点

// 关键特性：从根到叶子的最长可能路径，不会超过最短可能路径的两倍长

// 让红黑树保持平衡的手段：换色、左旋、右旋
// 左旋：逆时针旋转红黑树的两个节点，使父节点被自己右子节点取代，自身成为原位置的左节点
//     x                   y
//  a     y     =>      x    c
//      b   c         a   b
// 右旋：顺时针旋转红黑树的两个节点，使父节点被自己左子节点取代，自身成为原位置的右节点
//      x                   y
//   y     a     =>      b     x
// b   c                     c   a

//      G
//   p      U
// N

